Homework #3
Your name: John Furlong

---------------------------------------- Question 1 Query ---------------------------------------- 

SELECT last_name, first_name 
FROM employees
WHERE (country != 'UK' AND hire_date::date <= '2014-04-14')
ORDER BY last_name;

---------------------------------------- Question 1 Results ---------------------------------------- 					

 last_name | first_name 
-----------+------------
 Callahan  | Laura
 Davolio   | Nancy
 Fuller    | Andrew
 Leverling | Janet
 Peacock   | Margaret
(5 rows)

---------------------------------------- Question 2 Query ---------------------------------------- 

SELECT product_id, product_name, units_in_stock, unit_price 
FROM products
WHERE (units_in_stock >= 1 AND units_in_stock < reorder_level);

---------------------------------------- Question 2 Results ---------------------------------------- 					

product_id |       product_name        | units_in_stock | unit_price 
------------+---------------------------+----------------+------------
          2 | Chang                     |             17 |         19
          3 | Aniseed Syrup             |             13 |         10
         11 | Queso Cabrales            |             22 |         21
         21 | Sir Rodney's Scones       |              3 |         10
         30 | Nord-Ost Matjeshering     |             10 |      25.89
         32 | Mascarpone Fabioli        |              9 |         32
         37 | Gravad lax                |             11 |         26
         43 | Ipoh Coffee               |             17 |         46
         45 | Rogede sild               |              5 |        9.5
         48 | Chocolade                 |             15 |      12.75
         49 | Maxilaku                  |             10 |         20
         56 | Gnocchi di nonna Alice    |             21 |         38
         64 | Wimmers gute Semmelknödel |             22 |      33.25
         66 | Louisiana Hot Spiced Okra |              4 |         17
         68 | Scottish Longbreads       |              6 |       12.5
         70 | Outback Lager             |             15 |         15
         74 | Longlife Tofu             |              4 |         10
(17 rows)

---------------------------------------- Question 3 Query ---------------------------------------- 

SELECT product_name, unit_price 
FROM products
WHERE unit_price = (SELECT MIN(unit_price) FROM products);

---------------------------------------- Question 3 Results ---------------------------------------- 					

product_name | unit_price 
--------------+------------
 Geitost      |        2.5
(1 row)

---------------------------------------- Question 4 Query ---------------------------------------- 

SELECT product_id, product_name,
CASE WHEN (units_in_stock * unit_price) < 200
THEN (units_in_stock * unit_price)
END AS inventory_value
INTO TEMP TABLE inventory
FROM products
WHERE (units_in_stock * unit_price) < 200
ORDER BY inventory_value;

SELECT * FROM inventory;

---------------------------------------- Question 4 Results ---------------------------------------- 					

 product_id |       product_name        | inventory_value  
------------+---------------------------+------------------
         29 | Thüringer Rostbratwurst   |                0
          5 | Chef Anton's Gumbo Mix    |                0
         53 | Perth Pasties             |                0
         17 | Alice Mutton              |                0
         31 | Gorgonzola Telino         |                0
         21 | Sir Rodney's Scones       |               30
         74 | Longlife Tofu             |               40
         45 | Rogede sild               |             47.5
         66 | Louisiana Hot Spiced Okra |               68
         68 | Scottish Longbreads       |               75
         24 | Guaraná Fantástica        |               90
          3 | Aniseed Syrup             |              130
         13 | Konbu                     |              144
         54 | Tourtière                 | 156.449995994568
         48 | Chocolade                 |           191.25
(15 rows)

---------------------------------------- Question 5 Query ---------------------------------------- 

SELECT ship_country,
COUNT(CASE WHEN (ship_country != 'USA') AND (shipped_date BETWEEN '1996-08-01' AND '1996-08-31')
THEN 1 END)
FROM orders
WHERE (shipped_date BETWEEN '1996-08-01' AND '1996-08-31') AND (ship_country != 'USA')
GROUP BY ship_country;

---------------------------------------- Question 5 Results ---------------------------------------- 					

ship_country | count 
--------------+-------
 Spain        |     2
 Mexico       |     1
 Brazil       |     1
 UK           |     1
 Italy        |     1
 Venezuela    |     2
 Germany      |     7
 Finland      |     1
 Sweden       |     2
 France       |     2
(10 rows)	

---------------------------------------- Question 6 Query ---------------------------------------- 

SELECT customer_id, COUNT(order_id) 
FROM orders 
GROUP BY customer_id 
HAVING COUNT(order_id) < 4 
ORDER BY customer_id DESC;

---------------------------------------- Question 6 Results ---------------------------------------- 					

customer_id | count 
-------------+-------
 TRAIH       |     3
 THECR       |     3
 NORTS       |     3
 LAZYK       |     2
 LAUGB       |     3
 GROSR       |     2
 FRANR       |     3
 CONSH       |     3
 CENTC       |     1
 BOLID       |     3
(10 rows)

---------------------------------------- Question 7 Query ---------------------------------------- 

SELECT supplier_id,
SUM(units_in_stock * unit_price) AS total_value,
COUNT(product_id) as num_products
FROM products
GROUP BY supplier_id
HAVING COUNT(product_id) > 3;

---------------------------------------- Question 7 Results ---------------------------------------- 					

 supplier_id |   total_value    | num_products 
-------------+------------------+--------------
           7 | 4409.65005874634 |            5
          12 | 3301.84996032715 |            5
           2 |  2833.7999420166 |            4
           8 | 4276.99999523163 |            5
(4 rows)

---------------------------------------- Question 8 Query ---------------------------------------- 

SELECT
company_name, country, product_name, unit_price
FROM products, suppliers
WHERE (products.supplier_id = suppliers.supplier_id) AND (suppliers.country = 'France')
ORDER BY unit_price DESC;

---------------------------------------- Question 8 Results ---------------------------------------- 					

        company_name        | country |      product_name      | unit_price 
----------------------------+---------+------------------------+------------
 Aux joyeux ecclésiastiques | France  | Côte de Blaye          |      263.5
 Gai pâturage               | France  | Raclette Courdavault   |         55
 Gai pâturage               | France  | Camembert Pierrot      |         34
 Aux joyeux ecclésiastiques | France  | Chartreuse verte       |         18
 Escargots Nouveaux         | France  | Escargots de Bourgogne |      13.25
(5 rows)

---------------------------------------- Question 9 Query ---------------------------------------- 

SELECT last_name, first_name, title, extension
COUNT(orders.employee_id) AS Number_Of_Orders
FROM employees, orders
WHERE (employees.employee_id = orders.employee_id)
GROUP BY last_name, first_name, title, extension
HAVING COUNT(orders.employee_id) < 75;

---------------------------------------- Question 9 Results ---------------------------------------- 					

 last_name | first_name |        title         | extension | numer_of_orders 
-----------+------------+----------------------+-----------+-----------------
 Suyama    | Michael    | Sales Representative | 428       |              67
 Buchanan  | Steven     | Sales Manager        | 3453      |              42
 King      | Robert     | Sales Representative | 465       |              72
 Dodsworth | Anne       | Sales Representative | 452       |              43
(4 rows)

---------------------------------------- Question 10 Query ---------------------------------------- 

CREATE TABLE IF NOT EXISTS top_items (
item_id INT NOT NULL,
item_code INT NOT NULL,
item_name VARCHAR(40) NOT NULL,
inventory_date DATE NOT NULL,
supplier_id INT NOT NULL,
item_quantity INT NOT NULL,
item_price NUMERIC(9,2) NOT NULL,
PRIMARY KEY (item_id)
);

CREATE TABLE
	
---------------------------------------- Question 11 Query ---------------------------------------- 

INSERT INTO top_items(
item_id, item_code, item_name, inventory_date, item_quantity, item_price, supplier_id)
SELECT product_id, category_id, product_name, current_timestamp, units_in_stock, unit_price, supplier_id 
FROM products
WHERE (units_in_stock * unit_price) > 2500;

INSERT 0 9

---------------------------------------- Question 12 Query ---------------------------------------- 

DELETE FROM top_items
WHERE item_quantity < 50;

DELETE 4

---------------------------------------- Question 13 Query ---------------------------------------- 

ALTER TABLE top_items
ADD COLUMN inventory_value NUMERIC(9,2) NOT NULL DEFAULT 0;

ALTER TABLE

---------------------------------------- Question 14 Query ---------------------------------------- 

UPDATE top_items
SET inventory_value = (item_quantity * item_price);

UPDATE 5

---------------------------------------- Question 15 Query ---------------------------------------- 

DROP TABLE top_items;

DROP TABLE;



